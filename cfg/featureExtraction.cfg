#!/usr/bin/env python
PACKAGE = "stroll_bearnav"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("targetKeypoints", int_t, 0, "Desired number of keypoints", 500, 0, 5000)
gen.add("c", int_t, 0, "C constant to find z-coordinate", 3640, 0, 7000)
gen.add("verticalThreshold", int_t, 0, "The largest allowed vertical difference of keypoints", 5, 0, 500)
gen.add("ratioMatchConstant", double_t, 0, "Ratio match constant", 0.3, 0,  1.0)
gen.add("maxLine", double_t, 0, "Last line to extract features from", 1.0, 0,  1.0)
gen.add("thresholdParam", int_t, 0, "Response detector threshold", 400, 0, 10000)
gen.add("adaptThreshold", bool_t, 0, "Adaptive threshold", True)
gen.add("featureOvershootRatio", double_t, 0, "Feature overshoot percentage", 30, 0, 300)
gen.add("optimized", bool_t, 0, "Separate detection and description", True)

detector_enum = gen.enum([ gen.const("AGAST", int_t, 1, "AGAST"), gen.const("SURf", int_t, 2, "SURF"), gen.const("upSURf", int_t, 3, "upSURF")], "Detector type")
descriptor_enum = gen.enum([ gen.const("BRIEF", int_t, 1, "BRIEF"), gen.const("SURF", int_t, 2, "SURF")], "Descriptor type")

gen.add("detector", int_t, 0, "Image feature detector", 2, 1, 3, edit_method = detector_enum)
gen.add("descriptor", int_t, 0, "Image feature descriptor", 2, 1, 2, edit_method = descriptor_enum)

exit(gen.generate(PACKAGE, "stroll_bearnav", "featureExtraction"))
